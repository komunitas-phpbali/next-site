name: CI-CD

on: push

jobs:
  compile-assets:
    name: Compile assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # Build jS
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install dependencies
        run: npm ci
      - name: NPM Build
        run: |
          npm run prod
          cat public/mix-manifest.json # see version in log
      - name: Upload compile assets
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  test-php:
    name: Test/Lint PHP
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: phpbali_next_site
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick
      - name: Composer install
        run: composer install -n --prefer-dist
        env:
          APP_ENV: testing
      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate
      - name: Run tests
        run: ./vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          APP_ENV: testing
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: [compile-assets, test-php]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Download build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
          extensions: mbstring, bmath
      - name: Composer install
        run: composer install
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to Prod
        run: dep deploy production --tag=${{ env.GITHUB_REF }} -vvv